{"version":3,"file":"static/js/890.d9f237b7.chunk.js","mappings":"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","sources":["webpack://ju/./src/componantStyle/AddServices.module.css?cecd","webpack://ju/./src/componantStyle/AddServicesEnglish.module.css?ec76","pages/Dashboard/AddServicesEnglish.jsx","pages/Dashboard/AddServices.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"collanimate\":\"AddServices_collanimate__Ae+Uf\",\"AddQuestions\":\"AddServices_AddQuestions__i6haF\",\"firstp\":\"AddServices_firstp__HjRwq\",\"secondp\":\"AddServices_secondp__AMcF9\",\"check\":\"AddServices_check__-Jpsk\"};","// extracted by mini-css-extract-plugin\nexport default {\"AddServices\":\"AddServicesEnglish_AddServices__sxrLR\",\"headAddServices\":\"AddServicesEnglish_headAddServices__RAXFD\",\"inp\":\"AddServicesEnglish_inp__QUh4S\",\"inptextarea\":\"AddServicesEnglish_inptextarea__1SZSl\",\"textarea\":\"AddServicesEnglish_textarea__fe+K2\"};","import React, { useState } from \"react\";\r\nimport style from \"../../componantStyle/AddServicesEnglish.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Joi from \"joi\";\r\nimport { useUser } from \"../../context/Context\";\r\nexport default function AddServicesEnglish() {\r\n  const navigate = useNavigate();\r\n  const [servicesEnglish, setServicesEnglish] = useState({\r\n    title: \"title\",\r\n    description: \"description\",\r\n  } );\r\n  /////////handle image////////////////\r\n  const [imageChange, setImageChange] = useState(\"\");\r\n  function handleChangeImage(e) {\r\n    setImageChange(e.target.files[0]);\r\n  }\r\n  const [errorListServices, setErrorListServices] = useState(null);\r\n  const [errorBackServices, setErrorBackServices] = useState(null);\r\n  const [ loadingServices, setLoadingServices ] = useState( false );\r\n  const {direction} = useUser()\r\n  ////////////function handleChange///////////////\r\n  function handleChange(e) {\r\n    setServicesEnglish((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  }\r\n  function validationRegister() {\r\n    let schema = Joi.object({\r\n      title: Joi.string().required(),\r\n      description: Joi.string().required(),\r\n      title_en: Joi.string().required(),\r\n      description_en: Joi.string().required(),\r\n      title_ar: Joi.string().required(),\r\n      description_ar: Joi.string().required(),\r\n    });\r\n    return schema.validate(servicesEnglish, { abortEarly: false });\r\n  }\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    let responseValidateServices = validationRegister();\r\n    if (responseValidateServices.error) {\r\n      setErrorListServices([responseValidateServices.error.details]);\r\n    } else {\r\n      setErrorListServices(null);\r\n      const formData = new FormData();\r\n      formData.append(\"title\", servicesEnglish.title);\r\n      formData.append(\"title_en\", servicesEnglish.title_en);\r\n      formData.append(\"description\", servicesEnglish.description);\r\n      formData.append( \"description_en\", servicesEnglish.description_en );\r\n      formData.append(\"description_ar\", servicesEnglish.description_ar);\r\n      formData.append( \"title_ar\", servicesEnglish.title_ar );\r\n      formData.append(\"image\", imageChange);\r\n      try {\r\n        setLoadingServices(true);\r\n        const response = await fetch(\r\n          \"https://kog.pythonanywhere.com/api/v1/home/services/\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n             \r\n              Authorization: `Bearer ${localStorage.getItem(\"token_access\")}`,\r\n            },\r\n            body: formData,\r\n          }\r\n        );\r\n        const result = await response.json();\r\n        console.log(result);\r\n        setLoadingServices(false);\r\n\r\n        if (result.created_at) {\r\n          navigate(\"/dashboard/servies\");\r\n        } else {\r\n          setErrorBackServices(result);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <form className={style.AddServices} encType=\"multipart/form-data\">\r\n      {errorListServices &&\r\n        errorListServices.map((error, index) => (\r\n          <p key={index} className=\"alert alert-warning\">\r\n            {error[index].message}\r\n          </p>\r\n        ))}\r\n      <div className={style.headAddServices}>\r\n        <button className=\"btn btn-secondary\" onClick={handleSubmit}>\r\n          {loadingServices ? (\r\n            <div className=\"spinner-border text-secondary\" role=\"status\">\r\n              <span className=\"sr-only\"></span>\r\n            </div>\r\n          ) : (\r\n            <> {direction === \"EN\" ? \"Add Service\" : \"اضافة خدمة\"}</>\r\n          )}\r\n        </button>\r\n        <button\r\n          className=\"btn btn-success\"\r\n          onClick={() => {\r\n            navigate(-1);\r\n          }}\r\n        >\r\n          {direction === \"EN\" ? \"Back\" : \" رجوع\"}\r\n        </button>\r\n      </div>\r\n      <div className={style.inp}>\r\n        <label htmlFor=\"image\">\r\n          {\" \"}\r\n          {direction === \"EN\" ? \"choose image\" : \"اختر صورة\"}\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          id=\"image\"\r\n          accept=\"*/*\"\r\n          onChange={handleChangeImage}\r\n          required\r\n        />\r\n        {errorBackServices?.image && (\r\n          <p className=\"error\">{errorBackServices?.image}</p>\r\n        )}\r\n      </div>\r\n      <div className={style.inp}>\r\n        <label htmlFor=\"title_ar\">\r\n          {\" \"}\r\n          {direction === \"EN\"\r\n            ? \"name services Arabic\"\r\n            : \"اسم الخدمة باللغة العربية\"}\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"title_ar\"\r\n          id=\"title_ar\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className={style.inp}>\r\n        <label htmlFor=\"title_en\">\r\n          {direction === \"EN\"\r\n            ? \"name services English\"\r\n            : \"اسم الخدمة باللغة الانجليزية\"}{\" \"}\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"title_en\"\r\n          id=\"title_en\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className={style.inptextarea}>\r\n        <label htmlFor=\"description_ar\">\r\n          {direction === \"EN\"\r\n            ? \"description service Arabic\"\r\n            : \"وصف الخدمة باللغة العربية\"}{\" \"}\r\n        </label>\r\n        <br />\r\n        <textarea\r\n          name=\"description_ar\"\r\n          id=\"description_ar\"\r\n          className={style.textarea}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n      </div>\r\n      <div className={style.inptextarea}>\r\n        <label htmlFor=\"description_en\">\r\n          {direction === \"EN\"\r\n            ? \"description service English\"\r\n            : \"وصف الخدمة باللغة الانجليزية\"}{\" \"}\r\n        </label>\r\n        <br />\r\n        <textarea\r\n          name=\"description_en\"\r\n          id=\"description_en\"\r\n          className={style.textarea}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport style from \"../../componantStyle/AddServices.module.css\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import AddServicesArabic from \"./AddServicesArabic\";\r\nimport AddServicesEnglish from \"./AddServicesEnglish\";\r\nexport default function AddServices() {\r\n  // const [typeServices, setTypeServices] = useState(\"\");\r\n  // const navigate = useNavigate();\r\n\r\n\r\n  return (\r\n    <div className={style.collanimate}>\r\n          <AddServicesEnglish />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["AddServicesEnglish","navigate","useNavigate","servicesEnglish","setServicesEnglish","useState","title","description","imageChange","setImageChange","errorListServices","setErrorListServices","errorBackServices","setErrorBackServices","loadingServices","setLoadingServices","direction","useUser","handleChange","e","prevState","target","name","value","_jsxs","className","style","AddServices","encType","children","map","error","index","_jsx","message","headAddServices","onClick","async","preventDefault","responseValidateServices","Joi","required","title_en","description_en","title_ar","description_ar","validate","abortEarly","details","formData","FormData","append","response","fetch","method","headers","Authorization","concat","localStorage","getItem","body","result","json","console","log","created_at","role","_Fragment","inp","htmlFor","type","id","accept","onChange","files","image","inptextarea","textarea","collanimate"],"sourceRoot":""}